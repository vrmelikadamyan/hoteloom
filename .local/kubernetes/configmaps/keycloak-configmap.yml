apiVersion: v1
data:
  realm.json: |
    {
      "id" : "5a64feb0-22c9-4dac-8613-612ef3c07bf0",
      "realm" : "hoteloom-app",
      "notBefore" : 0,
      "defaultSignatureAlgorithm" : "RS256",
      "revokeRefreshToken" : false,
      "refreshTokenMaxReuse" : 0,
      "accessTokenLifespan" : 300,
      "accessTokenLifespanForImplicitFlow" : 900,
      "ssoSessionIdleTimeout" : 1800,
      "ssoSessionMaxLifespan" : 36000,
      "ssoSessionIdleTimeoutRememberMe" : 0,
      "ssoSessionMaxLifespanRememberMe" : 0,
      "offlineSessionIdleTimeout" : 2592000,
      "offlineSessionMaxLifespanEnabled" : false,
      "offlineSessionMaxLifespan" : 5184000,
      "clientSessionIdleTimeout" : 0,
      "clientSessionMaxLifespan" : 0,
      "clientOfflineSessionIdleTimeout" : 0,
      "clientOfflineSessionMaxLifespan" : 0,
      "accessCodeLifespan" : 60,
      "accessCodeLifespanUserAction" : 300,
      "accessCodeLifespanLogin" : 1800,
      "actionTokenGeneratedByAdminLifespan" : 43200,
      "actionTokenGeneratedByUserLifespan" : 300,
      "oauth2DeviceCodeLifespan" : 600,
      "oauth2DevicePollingInterval" : 5,
      "enabled" : true,
      "sslRequired" : "external",
      "registrationAllowed" : false,
      "registrationEmailAsUsername" : false,
      "rememberMe" : false,
      "verifyEmail" : false,
      "loginWithEmailAllowed" : true,
      "duplicateEmailsAllowed" : false,
      "resetPasswordAllowed" : false,
      "editUsernameAllowed" : false,
      "bruteForceProtected" : false,
      "permanentLockout" : false,
      "maxTemporaryLockouts" : 0,
      "maxFailureWaitSeconds" : 900,
      "minimumQuickLoginWaitSeconds" : 60,
      "waitIncrementSeconds" : 60,
      "quickLoginCheckMilliSeconds" : 1000,
      "maxDeltaTimeSeconds" : 43200,
      "failureFactor" : 30,
      "roles" : {
        "realm" : [ {
          "id" : "d4f7ae79-1ae1-43a9-9d71-a05e7e0ff5e6",
          "name" : "admin",
          "description" : "",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "5a64feb0-22c9-4dac-8613-612ef3c07bf0",
          "attributes" : { }
        }, {
          "id" : "0b518ca8-78c6-4edc-9654-ae85525b35c4",
          "name" : "default-roles-hoteloom-app",
          "description" : "${role_default-roles}",
          "composite" : true,
          "composites" : {
            "realm" : [ "offline_access", "uma_authorization" ],
            "client" : {
              "account" : [ "manage-account", "view-profile" ]
            }
          },
          "clientRole" : false,
          "containerId" : "5a64feb0-22c9-4dac-8613-612ef3c07bf0",
          "attributes" : { }
        }, {
          "id" : "ee216c49-6f2d-408e-9c65-83b1d16ef5a4",
          "name" : "user",
          "description" : "",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "5a64feb0-22c9-4dac-8613-612ef3c07bf0",
          "attributes" : { }
        }, {
          "id" : "7d459e5a-77e5-4cc4-a43e-7aa1dcf6f6b8",
          "name" : "uma_authorization",
          "description" : "${role_uma_authorization}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "5a64feb0-22c9-4dac-8613-612ef3c07bf0",
          "attributes" : { }
        }, {
          "id" : "9ef60477-854f-45dd-8b70-80b50d0735d4",
          "name" : "offline_access",
          "description" : "${role_offline-access}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "5a64feb0-22c9-4dac-8613-612ef3c07bf0",
          "attributes" : { }
        } ],
        "client" : {
          "realm-management" : [ {
            "id" : "bd650ea5-1f6b-4a57-a939-e6b1b0ce6b1f",
            "name" : "view-authorization",
            "description" : "${role_view-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "54ea6b48-962d-42ca-93fa-5c6e5861160c",
            "name" : "query-realms",
            "description" : "${role_query-realms}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "c0112e17-b619-4c57-a16c-b3ffeec6f2de",
            "name" : "manage-authorization",
            "description" : "${role_manage-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "a7b37b38-5c5a-452d-a539-18a5a4ce1602",
            "name" : "view-identity-providers",
            "description" : "${role_view-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "70d8c0e9-0589-4967-bb4b-9a92f9c9d420",
            "name" : "query-groups",
            "description" : "${role_query-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "89224535-6fbf-4924-9d82-db40b59246c7",
            "name" : "manage-identity-providers",
            "description" : "${role_manage-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "a55dde4e-c004-4f45-bf69-5106d4300c72",
            "name" : "realm-admin",
            "description" : "${role_realm-admin}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "view-authorization", "query-realms", "manage-authorization", "view-identity-providers", "query-groups", "manage-identity-providers", "create-client", "impersonation", "manage-events", "query-clients", "view-clients", "view-users", "view-realm", "query-users", "manage-realm", "manage-users", "view-events", "manage-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "5d048afd-002e-41e2-a194-bce32a37801c",
            "name" : "create-client",
            "description" : "${role_create-client}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "dfe2ac73-2351-4cc7-aa1a-db8824bea0cf",
            "name" : "impersonation",
            "description" : "${role_impersonation}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "61816d42-ee11-4b42-bbfa-835239c66125",
            "name" : "manage-events",
            "description" : "${role_manage-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "badc70b0-d16c-4d1e-b491-ac7c94a65d54",
            "name" : "query-clients",
            "description" : "${role_query-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "983e1784-f9f0-4352-8dde-853013dceb0b",
            "name" : "view-clients",
            "description" : "${role_view-clients}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "a6ab5b1a-2735-40e3-9da6-a5f83ba2536e",
            "name" : "view-users",
            "description" : "${role_view-users}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-groups", "query-users" ]
              }
            },
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "c3e3e415-1440-449a-baf0-22a1ba07d5ea",
            "name" : "query-users",
            "description" : "${role_query-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "1ce12058-56bd-4d41-95f6-e23cc9d83cca",
            "name" : "view-realm",
            "description" : "${role_view-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "c9e695fd-d84a-40b4-8632-4c75e138cb1e",
            "name" : "manage-realm",
            "description" : "${role_manage-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "393fd10c-a509-4ed0-85f5-f984fa4a9b1e",
            "name" : "manage-users",
            "description" : "${role_manage-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "c9470e49-6fa7-44a0-96f3-bdb24f1c173e",
            "name" : "view-events",
            "description" : "${role_view-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          }, {
            "id" : "88574058-98e3-4b05-9312-688bfb15d13a",
            "name" : "manage-clients",
            "description" : "${role_manage-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "630b87cd-1368-49cc-94eb-a45e04af1823",
            "attributes" : { }
          } ],
          "security-admin-console" : [ ],
          "admin-cli" : [ ],
          "account-console" : [ ],
          "broker" : [ {
            "id" : "53ea0095-f0b9-4ca0-9750-8a6815061e0e",
            "name" : "read-token",
            "description" : "${role_read-token}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "ab153e01-b57f-43b3-9e3c-d0a546844779",
            "attributes" : { }
          } ],
          "account" : [ {
            "id" : "6b307d54-5b2c-4222-8f92-d7cc124ed2d6",
            "name" : "manage-account-links",
            "description" : "${role_manage-account-links}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "e922c407-4c3d-4fa3-beca-48d342e453c6",
            "attributes" : { }
          }, {
            "id" : "1f0d8e31-998a-4bd6-ae47-85019dca67c1",
            "name" : "view-groups",
            "description" : "${role_view-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "e922c407-4c3d-4fa3-beca-48d342e453c6",
            "attributes" : { }
          }, {
            "id" : "cd5f7c29-8a60-4a2c-a8c1-7a868f5b3b72",
            "name" : "manage-account",
            "description" : "${role_manage-account}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "manage-account-links" ]
              }
            },
            "clientRole" : true,
            "containerId" : "e922c407-4c3d-4fa3-beca-48d342e453c6",
            "attributes" : { }
          }, {
            "id" : "b8379d16-2182-4818-a6aa-0b2558059e6b",
            "name" : "manage-consent",
            "description" : "${role_manage-consent}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "view-consent" ]
              }
            },
            "clientRole" : true,
            "containerId" : "e922c407-4c3d-4fa3-beca-48d342e453c6",
            "attributes" : { }
          }, {
            "id" : "cb866b1d-0382-4919-9286-5baa8ab198a1",
            "name" : "view-consent",
            "description" : "${role_view-consent}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "e922c407-4c3d-4fa3-beca-48d342e453c6",
            "attributes" : { }
          }, {
            "id" : "edd8f3ee-383e-4907-8a2d-fb2cbea5b12d",
            "name" : "view-profile",
            "description" : "${role_view-profile}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "e922c407-4c3d-4fa3-beca-48d342e453c6",
            "attributes" : { }
          }, {
            "id" : "77b57295-0dc9-4183-8e01-5fa6db251b37",
            "name" : "delete-account",
            "description" : "${role_delete-account}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "e922c407-4c3d-4fa3-beca-48d342e453c6",
            "attributes" : { }
          }, {
            "id" : "43655348-a04d-4ed5-b24a-cd5cfae93f9a",
            "name" : "view-applications",
            "description" : "${role_view-applications}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "e922c407-4c3d-4fa3-beca-48d342e453c6",
            "attributes" : { }
          } ],
          "client-service" : [ ]
        }
      },
      "groups" : [ ],
      "defaultRole" : {
        "id" : "0b518ca8-78c6-4edc-9654-ae85525b35c4",
        "name" : "default-roles-hoteloom-app",
        "description" : "${role_default-roles}",
        "composite" : true,
        "clientRole" : false,
        "containerId" : "5a64feb0-22c9-4dac-8613-612ef3c07bf0"
      },
      "requiredCredentials" : [ "password" ],
      "otpPolicyType" : "totp",
      "otpPolicyAlgorithm" : "HmacSHA1",
      "otpPolicyInitialCounter" : 0,
      "otpPolicyDigits" : 6,
      "otpPolicyLookAheadWindow" : 1,
      "otpPolicyPeriod" : 30,
      "otpPolicyCodeReusable" : false,
      "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
      "localizationTexts" : { },
      "webAuthnPolicyRpEntityName" : "keycloak",
      "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyRpId" : "",
      "webAuthnPolicyAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyRequireResidentKey" : "not specified",
      "webAuthnPolicyUserVerificationRequirement" : "not specified",
      "webAuthnPolicyCreateTimeout" : 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyAcceptableAaguids" : [ ],
      "webAuthnPolicyExtraOrigins" : [ ],
      "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyPasswordlessRpId" : "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout" : 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
      "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
      "users" : [ {
        "id" : "048af4ae-f50c-4bf4-bb4d-d2a41ec4a160",
        "username" : "user_admin",
        "firstName" : "Administrator",
        "lastName" : "Administrator",
        "email" : "user_admin@example.com",
        "emailVerified" : true,
        "createdTimestamp" : 1718107715623,
        "enabled" : true,
        "totp" : false,
        "credentials" : [ {
          "id" : "415d0153-b0a6-4030-8add-cd9f8374d693",
          "type" : "password",
          "userLabel" : "My password",
          "createdDate" : 1718107726885,
          "secretData" : "{\"value\":\"KtRCGgQ1jxJ+1H2NpnB7mjEZV6tLHjWLWa6Bs6vfHBU=\",\"salt\":\"VFQEwCjaGmD5wvOmo1MAvw==\",\"additionalParameters\":{}}",
          "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        } ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "admin", "default-roles-hoteloom-app", "user" ],
        "notBefore" : 0,
        "groups" : [ ]
      }, {
        "id" : "10657da6-3bcd-402a-a731-c3efccea1534",
        "username" : "user_customer",
        "firstName" : "Customer",
        "lastName" : "Customer",
        "email" : "user_customer@example.com",
        "emailVerified" : true,
        "createdTimestamp" : 1718096483387,
        "enabled" : true,
        "totp" : false,
        "credentials" : [ {
          "id" : "b27cdf12-5679-46d7-a9da-3915e49c3afb",
          "type" : "password",
          "userLabel" : "My password",
          "createdDate" : 1718096499840,
          "secretData" : "{\"value\":\"n7r5YbhhWrB6e/nfSIsneCIeMzFAWHMXsQkbv120RN8=\",\"salt\":\"asxJfzecbIK7y5GLsnn3VA==\",\"additionalParameters\":{}}",
          "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        } ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-hoteloom-app", "user" ],
        "notBefore" : 0,
        "groups" : [ ]
      } ],
      "scopeMappings" : [ {
        "clientScope" : "offline_access",
        "roles" : [ "offline_access" ]
      } ],
      "clientScopeMappings" : {
        "account" : [ {
          "client" : "account-console",
          "roles" : [ "manage-account", "view-groups" ]
        } ]
      },
      "clients" : [ {
        "id" : "e922c407-4c3d-4fa3-beca-48d342e453c6",
        "clientId" : "account",
        "name" : "${client_account}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/hoteloom-app/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/hoteloom-app/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "5cb454eb-5f9d-4c73-81d1-8c1e251475b0",
        "clientId" : "account-console",
        "name" : "${client_account-console}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/hoteloom-app/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/hoteloom-app/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "d1aa3300-c165-40ec-a231-689ab91381cb",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "fc77e81b-04b6-4ead-8ee4-a01e954ba275",
        "clientId" : "admin-cli",
        "name" : "${client_admin-cli}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "ab153e01-b57f-43b3-9e3c-d0a546844779",
        "clientId" : "broker",
        "name" : "${client_broker}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "b7890632-d2e1-4cc1-8de2-9324fb5c66cf",
        "clientId" : "client-service",
        "name" : "Client service application",
        "description" : "",
        "rootUrl" : "",
        "adminUrl" : "",
        "baseUrl" : "",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "pKco4o7bfh6v0SMPugYRytNnure5vp6J",
        "redirectUris" : [ "http://localhost:8082/*" ],
        "webOrigins" : [ "*" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : true,
        "protocol" : "openid-connect",
        "attributes" : {
          "oidc.ciba.grant.enabled" : "false",
          "client.secret.creation.time" : "1718096376",
          "backchannel.logout.session.required" : "true",
          "oauth2.device.authorization.grant.enabled" : "false",
          "backchannel.logout.revoke.offline.tokens" : "false"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "protocolMappers" : [ {
          "id" : "f55cf026-f62e-455d-a7cc-1151ffa96b73",
          "name" : "roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "multivalued" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "lightweight.claim" : "false",
            "access.token.claim" : "true",
            "claim.name" : "roles",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "630b87cd-1368-49cc-94eb-a45e04af1823",
        "clientId" : "realm-management",
        "name" : "${client_realm-management}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "eb510950-f98b-4d45-8fa4-a6d174fd89b6",
        "clientId" : "security-admin-console",
        "name" : "${client_security-admin-console}",
        "rootUrl" : "${authAdminUrl}",
        "baseUrl" : "/admin/hoteloom-app/console/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/admin/hoteloom-app/console/*" ],
        "webOrigins" : [ "+" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "517abcbb-91a8-4e5d-b1a2-8dd16f8ac869",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      } ],
      "clientScopes" : [ {
        "id" : "6f0e2b02-e63a-468e-b22e-cecfd115ea46",
        "name" : "acr",
        "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "9fe7fdbd-fe4d-42a7-a99e-8179b55c7cf9",
          "name" : "acr loa level",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-acr-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "1f25e485-60ca-4cdb-a6f7-30975fc19027",
        "name" : "phone",
        "description" : "OpenID Connect built-in scope: phone",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${phoneScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "da67f67a-e704-4ddf-aebe-c6113461ddb5",
          "name" : "phone number",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumber",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "2a29b99a-73fa-464c-8720-8521f1e814b2",
          "name" : "phone number verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumberVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number_verified",
            "jsonType.label" : "boolean"
          }
        } ]
      }, {
        "id" : "0df2abd4-601a-4d76-a5ad-5463397f1cd8",
        "name" : "email",
        "description" : "OpenID Connect built-in scope: email",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${emailScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "58fbe6fe-a4a0-4845-b8f3-20d479984942",
          "name" : "email verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "emailVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email_verified",
            "jsonType.label" : "boolean"
          }
        }, {
          "id" : "8cb4811c-2267-496b-af9b-28897d0d643f",
          "name" : "email",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "email",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "9d78501c-5702-4fb6-986c-d218a2c7e778",
        "name" : "roles",
        "description" : "OpenID Connect scope for add user roles to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "consent.screen.text" : "${rolesScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "1a6ca655-c187-4a9a-9d89-0fe1baa6dddf",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        }, {
          "id" : "2190772e-d38f-4a8f-bbd2-25ee5f1248fb",
          "name" : "client roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-client-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "resource_access.${client_id}.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "b5c4fe4d-72c6-4a57-a871-e131e9aa6975",
          "name" : "realm roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "realm_access.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        } ]
      }, {
        "id" : "28b0f075-efb1-4cea-bf7f-aea1c33f568f",
        "name" : "basic",
        "description" : "OpenID Connect scope for add all basic claims to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "0ee37cb7-5b58-4b7e-a48e-3f44b93efe1f",
          "name" : "auth_time",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "AUTH_TIME",
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "auth_time",
            "jsonType.label" : "long"
          }
        }, {
          "id" : "d8f41e6f-52b1-4e6a-99f9-1a8bbdefd1e7",
          "name" : "sub",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-sub-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "95b8950f-8e4d-44da-8ae0-1784b0dff5e2",
        "name" : "role_list",
        "description" : "SAML role list",
        "protocol" : "saml",
        "attributes" : {
          "consent.screen.text" : "${samlRoleListScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "c4f04128-0b38-4944-b152-8f69e59eb8f3",
          "name" : "role list",
          "protocol" : "saml",
          "protocolMapper" : "saml-role-list-mapper",
          "consentRequired" : false,
          "config" : {
            "single" : "false",
            "attribute.nameformat" : "Basic",
            "attribute.name" : "Role"
          }
        } ]
      }, {
        "id" : "1bb97af2-95e6-4ebc-99b0-c45b5b886f01",
        "name" : "address",
        "description" : "OpenID Connect built-in scope: address",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${addressScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "934656dd-4cdc-459a-8285-616226f5856d",
          "name" : "address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-address-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute.formatted" : "formatted",
            "user.attribute.country" : "country",
            "introspection.token.claim" : "true",
            "user.attribute.postal_code" : "postal_code",
            "userinfo.token.claim" : "true",
            "user.attribute.street" : "street",
            "id.token.claim" : "true",
            "user.attribute.region" : "region",
            "access.token.claim" : "true",
            "user.attribute.locality" : "locality"
          }
        } ]
      }, {
        "id" : "2da15028-77db-4d71-be92-8156378e9e97",
        "name" : "web-origins",
        "description" : "OpenID Connect scope for add allowed web origins to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "consent.screen.text" : "",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "6ac6d5f3-60f1-4f81-b81d-ed97e5584cc5",
          "name" : "allowed web origins",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-allowed-origins-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "040cd28c-bc0c-46ee-9a32-7dc142c7f5b1",
        "name" : "microprofile-jwt",
        "description" : "Microprofile - JWT built-in scope",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "5dc985bc-cbf7-4c5f-9382-247e28445157",
          "name" : "upn",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "upn",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "c61c312a-7002-4ecb-b376-b03b6c107a61",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "multivalued" : "true",
            "user.attribute" : "foo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "79ddfa5a-cb79-4c71-b60b-8eb4e99a1207",
        "name" : "offline_access",
        "description" : "OpenID Connect built-in scope: offline_access",
        "protocol" : "openid-connect",
        "attributes" : {
          "consent.screen.text" : "${offlineAccessScopeConsentText}",
          "display.on.consent.screen" : "true"
        }
      }, {
        "id" : "7d8dd20a-acb9-4e13-950f-51e1f7ab7989",
        "name" : "profile",
        "description" : "OpenID Connect built-in scope: profile",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${profileScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "f49157c5-2c8f-4aab-8df0-af27bfcf9340",
          "name" : "birthdate",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "birthdate",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "birthdate",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "6ea7c00f-1245-45a6-8f23-0fdb7aa6c88b",
          "name" : "profile",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "profile",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "profile",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "bd988524-9872-4712-a0d3-2bf072e3dcc8",
          "name" : "updated at",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "updatedAt",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "updated_at",
            "jsonType.label" : "long"
          }
        }, {
          "id" : "7b24e751-e08e-44a5-b996-79e69511d176",
          "name" : "nickname",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "nickname",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "nickname",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "d40af70f-f201-4249-b5dc-661d70bead39",
          "name" : "full name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-full-name-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        }, {
          "id" : "7e7b9e68-85b1-41b5-ad64-11def152d1a2",
          "name" : "website",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "website",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "website",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "175ff7a2-f993-4490-be50-a2c1950ab57e",
          "name" : "username",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "preferred_username",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "02febed6-4db6-4b3a-9edc-96d23325b18d",
          "name" : "family name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "lastName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "family_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "edf13281-b660-4d1b-b94a-dd4ecf248194",
          "name" : "zoneinfo",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "zoneinfo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "zoneinfo",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "44cb4c7e-604a-4368-80b4-b96350d1aa4b",
          "name" : "gender",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "gender",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "gender",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "796f95f8-c65d-4aad-be64-97fe72d008c7",
          "name" : "middle name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "middleName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "middle_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "8746078e-f8bc-4943-a7b3-cf1a84c4fa95",
          "name" : "picture",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "picture",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "picture",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "12643bf8-34e0-4e60-996a-4106a4e01389",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "e10bd1a7-c291-4244-8896-26f869d168b6",
          "name" : "given name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "firstName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "given_name",
            "jsonType.label" : "String"
          }
        } ]
      } ],
      "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr", "basic" ],
      "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
      "browserSecurityHeaders" : {
        "contentSecurityPolicyReportOnly" : "",
        "xContentTypeOptions" : "nosniff",
        "referrerPolicy" : "no-referrer",
        "xRobotsTag" : "none",
        "xFrameOptions" : "SAMEORIGIN",
        "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection" : "1; mode=block",
        "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
      },
      "smtpServer" : { },
      "eventsEnabled" : false,
      "eventsListeners" : [ "jboss-logging" ],
      "enabledEventTypes" : [ ],
      "adminEventsEnabled" : false,
      "adminEventsDetailsEnabled" : false,
      "identityProviders" : [ ],
      "identityProviderMappers" : [ ],
      "components" : {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
          "id" : "88504eb7-d7d2-4e6c-9c60-52fdc6e0d2e4",
          "name" : "Full Scope Disabled",
          "providerId" : "scope",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "59c2c635-89ee-45a6-b97c-f3a9c4b3c4fc",
          "name" : "Consent Required",
          "providerId" : "consent-required",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "fcaded4a-a9a8-4329-be9e-084e0e438628",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-address-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper" ]
          }
        }, {
          "id" : "585af410-2557-4d8d-a2e6-c6592a5cb703",
          "name" : "Trusted Hosts",
          "providerId" : "trusted-hosts",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "host-sending-registration-request-must-match" : [ "true" ],
            "client-uris-must-match" : [ "true" ]
          }
        }, {
          "id" : "adf55fc3-ac30-4311-902e-4edda0e84fec",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper" ]
          }
        }, {
          "id" : "644f17a7-72ca-4c24-bb2d-76e43974d176",
          "name" : "Max Clients Limit",
          "providerId" : "max-clients",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "max-clients" : [ "200" ]
          }
        }, {
          "id" : "2fe2aa9e-5851-4877-be83-cd47a2d597a6",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "1c070239-add2-4c58-8e36-2546c1038b8e",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        } ],
        "org.keycloak.keys.KeyProvider" : [ {
          "id" : "c1ac8b9e-1f57-4b2d-b89a-02b652d2c685",
          "name" : "hmac-generated-hs512",
          "providerId" : "hmac-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "cd08be34-8aea-4a7a-829f-0d309b3b4238" ],
            "secret" : [ "att8uGrD90Fu6SNSDQ0v2PXy4I3rL-Hd3TWtjhbu4SXwfMtRRAJO6pTwH3Dzs8fqX46iTDkghoqiDmlesZ0tvhAfNv-G0BP7Se2Bpp41SURAQFTuReavY2PO7GS78fLvsp0v5QNW63iHRRB71NGy8BYcG3LlX6jCCaFN_yNZDnE" ],
            "priority" : [ "100" ],
            "algorithm" : [ "HS512" ]
          }
        }, {
          "id" : "dbfb1105-14c9-401c-b38d-75f4260a7ac6",
          "name" : "aes-generated",
          "providerId" : "aes-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "6e9a4f26-ba87-4e78-96bc-e82faf9153f4" ],
            "secret" : [ "E2-chZwuq9EzMQuYXkmxDA" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "ea4da634-a7bd-48a5-8547-7b0b07f0963f",
          "name" : "rsa-enc-generated",
          "providerId" : "rsa-enc-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEpAIBAAKCAQEAp3X6itz8oRjzhhfu8Y7kZDzjiXybiBwJmx+VfnHP6VBi7oU5U9/EQP022QK0ii4gINI/ypWbAYw4pB1GeuGz6HgaMaPao0phiynxfh9eO569SqymaSssSgSjENoJCV0a7hWfn2hSCuwSNBhHIT+vfk5OJLaMPPE7BPtvTxkYNv1CyQp69roKpEXVaYWB3YKn0UAvCHLvl5uhPU1sUeUoBOurXT97wKVySI2fiWqnynvwOf1kAaM+1mC9gMiuphUb1eHruhd36nnBMA7m/0YmVRQhOKd1ZCnZcsPXpmzejfvm2G0LXwuTabI4jVDOjW9VymeNBsLPcMTqvOxcnOanzQIDAQABAoIBABzKyB0ACd+Y7qXrj4Wwz8v8PBLzfbpVN8GYGJf48Ypn69qexVCKdK/H2ZpOQMRRUezSuW0Xc+M8PLDa57dQ/yHFJJvMVFcm/sZym7bXpdgSXvFr5eDHL4I6cd7/3fXiMDMnPJ6nzRNbq3WRhwlMbdwFkqH1UP9ZapBcurKa2fL6KQBeEJ6j31ckXTpHwle5vcnwZhKslO7EWNV6uP5fxhAxydWpnbGZLxztZhDFsHeq+htk1xVArUHpKgTHuquiJXkLiOlXqMuqCv+4bVTm8yRkP2H0AEgAbSNMNb4ycNb9nZoub1dPPk4uZI/UFOD38NCZ67Bj2FfZSHPiyiSovXECgYEA4XTyCjhWYxEOrM/yGTIkEEFt2GVmO51Ty8fTXn9GET8uejfnSAMW2U2dEXLKFnW4Wf8Wo1WKLNM0ZEGgP2PRTTSHQ3qbZh0eGYy16/sA2f3Bb3CiWNMoTuXHbip8sFmKjNuMzhBVOF5eC68F0Ie9UyF/NqQO4h1DjFGqpwSPZY8CgYEAviWtuoUI6h6JTYbVMITtO/cZUB1mf454vBARfU29+iWeEOWnAcarkjUW1klATQ1BrvxPqLlfFFD/6VVKzGwMte4fRSwdaw7/WrdagGTGhidamxpeTUa+W3uZD17ae5lxKAKZrzo00cmzK4ur2dRUo65jj1AVa9VsGMfgm1gdxuMCgYEA2kb41wA4Uu1+wb0J7W7oD3zpNmrlka3+JPswHvsmASikfNuG5ednxbco7G2wThJnC2q2pif5APDydmY7GWQwjYjftGsN7M0gCSh8MR3wcx0EnDn2U/0Lt2crr/MeiTYHt9wP9KlHeK2Ua8dl38CrgcKagXJQnoYqkb23dMArfO0CgYEAmaCrqqVNvIqLeJ3VpWvgmLBePUJjy+96UMfSuaCUO4UlHpXNxzuS54AJQXzRfO+XACBO5A1RaoK/IPCOjHdIFb2cejDYW+U0H0FA17eURlOJewNk6Z6csiE8WxTSBUbGDAN90/t9LXp/TlF8uXQ6Jj0Bp4qWpBc9TRBAwoIBHO0CgYA8BPUr8j9zLoL9+egsNgfK1QqNciU0E79V4RiG5sJaBru0gs5V04yDL+mDuoTaV45KXBEHukADaq8CwQe6/ZfMyaJ7sMxIsnresDSENyuwmgo1h2ZJUp/ZTUBe+dGktDalMDz+mgiMDiFT2QkM2OGjApgaya1LxalcU6Y5fOV6CQ==" ],
            "keyUse" : [ "ENC" ],
            "certificate" : [ "MIICpzCCAY8CBgGQBoPkXzANBgkqhkiG9w0BAQsFADAXMRUwEwYDVQQDDAxob3RlbG9vbS1hcHAwHhcNMjQwNjExMDg1NTI1WhcNMzQwNjExMDg1NzA1WjAXMRUwEwYDVQQDDAxob3RlbG9vbS1hcHAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCndfqK3PyhGPOGF+7xjuRkPOOJfJuIHAmbH5V+cc/pUGLuhTlT38RA/TbZArSKLiAg0j/KlZsBjDikHUZ64bPoeBoxo9qjSmGLKfF+H147nr1KrKZpKyxKBKMQ2gkJXRruFZ+faFIK7BI0GEchP69+Tk4ktow88TsE+29PGRg2/ULJCnr2ugqkRdVphYHdgqfRQC8Icu+Xm6E9TWxR5SgE66tdP3vApXJIjZ+JaqfKe/A5/WQBoz7WYL2AyK6mFRvV4eu6F3fqecEwDub/RiZVFCE4p3VkKdlyw9embN6N++bYbQtfC5NpsjiNUM6Nb1XKZ40Gws9wxOq87Fyc5qfNAgMBAAEwDQYJKoZIhvcNAQELBQADggEBABlMbgS3MjhSLp6NxsJDpSomjCiyWCTWaVD2vdBvIR8TkD4bSbf+Ot9gMXH+e85fxUR/sfZUAqHl9XONOIyo9nXn2pDGdBAYiUJeWbM/+eNHZo2hpyNmD7gfzCVr0f3Uh4r9QAiK8OKDTUTd/rfJ90gNjk4K5nyL8EEfwohUcT5mtS6dfL9uEkq8yLDM5y6J8n/TcCqxFy/9dgFRD/4IXpwVbNLDZ1FKOu7k7jOxphxfbc6l/LkQqnCz/gAKtRNpu7rYyF6gZTfpU4wv2duBS0IzWBclUaop7Tc8x8fLSFpD+GoymGG4+q6WA1agnyjLhdvxaqtrevF/hw2gx3kGTNQ=" ],
            "priority" : [ "100" ],
            "algorithm" : [ "RSA-OAEP" ]
          }
        }, {
          "id" : "ff45b40b-b169-4a6a-9d91-d3e2172c2d41",
          "name" : "rsa-generated",
          "providerId" : "rsa-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEogIBAAKCAQEA0+LIh8bpKFheZUGn7FeSwHS3aPsXJuaOv8S0vqqAJrci1KxV00wdz0yvnJKJhzKxdv3GPxsEaD82ngnEJJhgKhlTp+KzRiCKwOwDbd5p9PyYs0JwxWxIp6EYrI5uMpFI+486THfqYDhMqUlxAC0b8VlvEFmQtOERqnVXT4RKuF/3GXuEJh6rKCrauldeMJJcxWApAp7+yUICqw2SwbEmnvIl03pmMoTHduZ3s9YMaoRgWMPu1IFxMkDM9Gcvb4wk1kn+MkfNqnpgTIrzOFQisofqPEIUOuOK4EUaXqcRYgDYV7/RZG/sUeYCVaBDdPRl8R0Nf5Fvz2927BVWyEBqQQIDAQABAoH/cZVcYY7hw3IkOSOKHNsZYTQfHdrzls1Fp5htKaZv6gzb6+GpdcY+Vsh4SjruOj6lwU58M0bqhNWARybB5P5SjqU4O62pBkyev6pv5+Swks5vc4bMdbM4lMXgnuQhty0IpdGy3cKd2QfMmTd4l7kwWxc4WNgzByoGNLg66weQ5GakhyVM3OTVfcS9Sq+NHlnr0Ck32MrsubIywngq5Sn2wrAOYkhKQLw9fRdldn/vt9q2AVhlMWRRbuA+zJ+eKO9cgCmIScxOCAyeQOW/oX5fAduQyuDbgqiEIql30UwucH0zSOkS1Y+MwHeSzuOWTKMDKkRQmdWRm5blDZalGjH3AoGBAO5KeQ+Qa1TRVZHDP9CTg1i7BaAhE6FAUhkGeXHGKf/xrA5BEn6CAojYHdAHzvuPQFipM/gXTsx8EKXIN/PFr/+6uB3fITNXt36UfsbPWAd2Y8PeR3qiB/4U1qm4UEhvFhgAR00Ya9+NJJVQZ9d/469TPuA7DrVpBg/6nJ7Zta9fAoGBAOOh8ysh/gXXmxacQrBdYWTcX3Np8yL9HXKGK40uhRz+QwOaOx73CYBs6vHgk/hC8Gd1QX16AQCRovrSRDfmwtwaSEEb4ImairOjMAxVgWtSmNo51PMI4PjwiD0jwqvXXRcyBICLgEFpoOuLCsofDiRc7WLtjUsUWSsLrmJzKWpfAoGBAMjUV0d4zhzD+LxKtEPTr0VfChS1C9hBX2/b9wqemtMtGXdB/JZGeGBg1G95xUZaqz6ODFCxRCYvAdDW9+Ep4XVEJtx2K4McEHhMKrTgFy7i5p4zfkaqvNW1Nl4ACxmhFhvQUEd3p6LXT9fP1lTXYktne3x8CZ93Djb1Xn66udc9AoGASHtU9rMIM8wHchenlIjnbjpNmm5uIQH/0muuinH5qNW9ePQvRxjaSa5k0Uf1VePasNbBV7b1grzc7Ijvd+1etr8XqsO5p5cx+ylHL2Y6o3XVfgdUK170Y9ATUYSFhDo7RhuDG3tQB4Qe3WGUue9RjXqZjBqgFvwPuIkrqeWJlnkCgYEA3rjZeWCR7wrmFQXdlzZqaJEzovR9vcsE1bWvStp0ojpHV8CMJuH2bBcSgHF0v01kF0CI3P8wLPEnYtCkQ0R4bdS//uKC6RsCewhn17VrlDqaLQ5WozklxmeuHW0sNWX+SXZHlHhZ5RXsda13FwoLVbM0FLbHpYLdsos8U2kl1WU=" ],
            "keyUse" : [ "SIG" ],
            "certificate" : [ "MIICpzCCAY8CBgGQBoPjPTANBgkqhkiG9w0BAQsFADAXMRUwEwYDVQQDDAxob3RlbG9vbS1hcHAwHhcNMjQwNjExMDg1NTI1WhcNMzQwNjExMDg1NzA1WjAXMRUwEwYDVQQDDAxob3RlbG9vbS1hcHAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDT4siHxukoWF5lQafsV5LAdLdo+xcm5o6/xLS+qoAmtyLUrFXTTB3PTK+ckomHMrF2/cY/GwRoPzaeCcQkmGAqGVOn4rNGIIrA7ANt3mn0/JizQnDFbEinoRisjm4ykUj7jzpMd+pgOEypSXEALRvxWW8QWZC04RGqdVdPhEq4X/cZe4QmHqsoKtq6V14wklzFYCkCnv7JQgKrDZLBsSae8iXTemYyhMd25nez1gxqhGBYw+7UgXEyQMz0Zy9vjCTWSf4yR82qemBMivM4VCKyh+o8QhQ644rgRRpepxFiANhXv9Fkb+xR5gJVoEN09GXxHQ1/kW/Pb3bsFVbIQGpBAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE8TQspR0EITC3cQPLeyVXrEcXLqOmXJbvLESZ/s639ncaX3qswPw4iT3A3VL6+0Hjc2JAQ6SAgjDW3mcvz21PTafYGjAIh1z3NFBQvgJOvX/YNaM+hr/LLxh6w5IhtNL8QET23Ol9DvbjkF13IbQXuNViUh/byoAJczovl1AZFEtHoqDkH5z24/qc7XA04M2+CJ/A2JP/dcSSWaO69yneFsaTKhDee6RInCZYGayu4B7bIriyKSYURbP/jKwLh/f8j30qfSqD8omQ2ysfVcvoXoN9Mx31dW5mv40L4uHCfVASh/1yq5yWZH5qsgPjHcYNa5TbCKSonozJxgAc2jY3I=" ],
            "priority" : [ "100" ]
          }
        } ]
      },
      "internationalizationEnabled" : false,
      "supportedLocales" : [ ],
      "authenticationFlows" : [ {
        "id" : "5c02f2ae-2f1b-45ec-87df-5254b486c4ca",
        "alias" : "Account verification options",
        "description" : "Method with which to verity the existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-email-verification",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Verify Existing Account by Re-authentication",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "9d852a6e-d703-40f1-9f92-00a66a120259",
        "alias" : "Browser - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "7e930c3f-d0d9-456a-bcd9-5ccdee54044c",
        "alias" : "Direct Grant - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "e317ff03-ea89-4e24-a4fa-0b38e416b830",
        "alias" : "First broker login - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "e115d486-c813-4503-b93d-d7f5e2a2b968",
        "alias" : "Handle Existing Account",
        "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-confirm-link",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Account verification options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "ef7261bb-3562-44cc-a01b-8a442c2219b1",
        "alias" : "Reset - Conditional OTP",
        "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "9bb915af-697f-4dfd-b48c-250bf3007a4b",
        "alias" : "User creation or linking",
        "description" : "Flow for the existing/non-existing user alternatives",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "create unique user config",
          "authenticator" : "idp-create-user-if-unique",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Handle Existing Account",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "88e9851f-a95f-4426-a29b-3874346b6d24",
        "alias" : "Verify Existing Account by Re-authentication",
        "description" : "Reauthentication of existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "First broker login - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "fa6438b7-9e4c-487a-b981-39a5bd2677f9",
        "alias" : "browser",
        "description" : "browser based authentication",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-cookie",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "identity-provider-redirector",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 25,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "forms",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "6cbf09e0-f100-4236-8e9e-36bc377a8c2b",
        "alias" : "clients",
        "description" : "Base authentication for clients",
        "providerId" : "client-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "client-secret",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-secret-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-x509",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "ec22c654-5b19-4739-8c98-ff8a1cd2ec13",
        "alias" : "direct grant",
        "description" : "OpenID Connect Resource Owner Grant",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "direct-grant-validate-username",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "Direct Grant - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "17bd2eae-2f9c-4dde-8cea-32d73f04e211",
        "alias" : "docker auth",
        "description" : "Used by Docker clients to authenticate against the IDP",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "docker-http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "03b95662-88b5-4150-8258-a8a32bb3473f",
        "alias" : "first broker login",
        "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "review profile config",
          "authenticator" : "idp-review-profile",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "User creation or linking",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "465d9270-c987-4afe-a284-bc6f6c87038e",
        "alias" : "forms",
        "description" : "Username, password, otp and other auth forms.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "5c90d431-1656-4c7a-8ced-718d5339a9e1",
        "alias" : "registration",
        "description" : "registration flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-page-form",
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "registration form",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "5574244c-696f-4aa3-9c99-94fdcef96c30",
        "alias" : "registration form",
        "description" : "registration form",
        "providerId" : "form-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-user-creation",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-password-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 50,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-recaptcha-action",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 60,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-terms-and-conditions",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 70,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "060bd703-d12e-480f-af29-9e1e1c48e9b0",
        "alias" : "reset credentials",
        "description" : "Reset credentials for a user if they forgot their password or something",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "reset-credentials-choose-user",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-credential-email",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 40,
          "autheticatorFlow" : true,
          "flowAlias" : "Reset - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "f2a0a508-7ef9-4da5-aa4e-d6d726c986ad",
        "alias" : "saml ecp",
        "description" : "SAML ECP Profile Authentication Flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      } ],
      "authenticatorConfig" : [ {
        "id" : "8d890dd1-d006-4ac0-abb4-e84dce817356",
        "alias" : "create unique user config",
        "config" : {
          "require.password.update.after.registration" : "false"
        }
      }, {
        "id" : "c0013c46-5e90-40a2-aaf8-cbfb9ebc2b37",
        "alias" : "review profile config",
        "config" : {
          "update.profile.on.first.login" : "missing"
        }
      } ],
      "requiredActions" : [ {
        "alias" : "CONFIGURE_TOTP",
        "name" : "Configure OTP",
        "providerId" : "CONFIGURE_TOTP",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 10,
        "config" : { }
      }, {
        "alias" : "TERMS_AND_CONDITIONS",
        "name" : "Terms and Conditions",
        "providerId" : "TERMS_AND_CONDITIONS",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 20,
        "config" : { }
      }, {
        "alias" : "UPDATE_PASSWORD",
        "name" : "Update Password",
        "providerId" : "UPDATE_PASSWORD",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 30,
        "config" : { }
      }, {
        "alias" : "UPDATE_PROFILE",
        "name" : "Update Profile",
        "providerId" : "UPDATE_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 40,
        "config" : { }
      }, {
        "alias" : "VERIFY_EMAIL",
        "name" : "Verify Email",
        "providerId" : "VERIFY_EMAIL",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 50,
        "config" : { }
      }, {
        "alias" : "delete_account",
        "name" : "Delete Account",
        "providerId" : "delete_account",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 60,
        "config" : { }
      }, {
        "alias" : "webauthn-register",
        "name" : "Webauthn Register",
        "providerId" : "webauthn-register",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 70,
        "config" : { }
      }, {
        "alias" : "webauthn-register-passwordless",
        "name" : "Webauthn Register Passwordless",
        "providerId" : "webauthn-register-passwordless",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 80,
        "config" : { }
      }, {
        "alias" : "VERIFY_PROFILE",
        "name" : "Verify Profile",
        "providerId" : "VERIFY_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 90,
        "config" : { }
      }, {
        "alias" : "delete_credential",
        "name" : "Delete Credential",
        "providerId" : "delete_credential",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 100,
        "config" : { }
      }, {
        "alias" : "update_user_locale",
        "name" : "Update User Locale",
        "providerId" : "update_user_locale",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 1000,
        "config" : { }
      } ],
      "browserFlow" : "browser",
      "registrationFlow" : "registration",
      "directGrantFlow" : "direct grant",
      "resetCredentialsFlow" : "reset credentials",
      "clientAuthenticationFlow" : "clients",
      "dockerAuthenticationFlow" : "docker auth",
      "firstBrokerLoginFlow" : "first broker login",
      "attributes" : {
        "cibaBackchannelTokenDeliveryMode" : "poll",
        "cibaExpiresIn" : "120",
        "cibaAuthRequestedUserHint" : "login_hint",
        "oauth2DeviceCodeLifespan" : "600",
        "oauth2DevicePollingInterval" : "5",
        "parRequestUriLifespan" : "60",
        "cibaInterval" : "5",
        "realmReusableOtpCode" : "false"
      },
      "keycloakVersion" : "25.0.0",
      "userManagedAccessAllowed" : false,
      "organizationsEnabled" : false,
      "clientProfiles" : {
        "profiles" : [ ]
      },
      "clientPolicies" : {
        "policies" : [ ]
      }
    }
kind: ConfigMap
metadata:
  name: keycloak-configmap